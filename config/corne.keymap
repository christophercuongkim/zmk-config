/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | +    |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L    |  U  |  Y  |  ;  |  "   |
// | TAB  |  A  |  R  |  S  |  T  |  G  |   |  M  |  N    |  E  |  I  |  O  |  =   |
// | -    |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H    |  [  |  ]  |  .  |  _   |
//                    | LY0 | ESC | SPC |   | ENT |  BSPC | LY1 |
                        bindings = <
   &kp PLUS   &kp Q &kp W &kp F &kp P   &kp B       &kp J   &kp L    &kp U            &kp Y             &kp SEMI   &kp DOUBLE_QUOTES
   &kp TAB    &kp A &kp R &kp S &kp T   &kp G       &kp M   &kp N    &kp E            &kp I             &kp O      &kp EQUAL
   &kp MINUS  &kp Z &kp X &kp C &kp D   &kp V       &kp K   &kp H    &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp PERIOD &kp UNDERSCORE
                          &to 0 &kp ESC &kp SPACE   &kp RET &kp BSPC &to 1
                        >;
                };

                num_sym_layer {
// -----------------------------------------------------------------------------------------
// |  0   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7     |  8  |  9  |  "<"  | ">"  |
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &     |  *  |  (  |  )    | `    |
// | SHFT |  -  |  =  |  [  |  ]  |  \  |   |  _  |  +     |  {  |  }  | "|"   |  ~   |
//                    | LY0 |     | SPC |   | ENT |  BSPC  | LY2 |
                        bindings = <
   &kp N0     &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6    &kp N7   &kp N8   &kp N9    &kp LT   &kp GT
   &kp TAB    &kp EXCL     &kp AT       &kp HASH     &kp DOLLAR   &kp PRCNT      &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR &kp GRAVE
   &kp LSHFT  &kP MINUS    &kp EQUAL    &kp LBKT     &kp RBKT     &kp BSLH       &kp UNDER &kp PLUS &kp LBRC &kp RBRC  &kp PIPE &kp TILDE
                                        &tO 0        &trans       &kp SPACE      &kp RET   &kp BSPC &to 2
                        >;
                };

                bt_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  | ALT  |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN  |  UP | RGT |     | F12  |
// | SHFT | F1  | F2  | F3  | F4  | F5  |   | F6  | F7   |  F8 | F9  | F10 | F11  |
//                    | LY0 |     | SPC |   | ENT | BSPC | LY3 |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0  &kp RALT
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans  &kp F12
   &kp LSHFT  &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8 &kp F9    &kP F10 &kp F11
                                        &to 0        &trans       &kp SPACE      &kp RET  &kp BSPC   &to 3
                        >;
                };

                gaming_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U    |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J    |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M    |  ,  |  .  |  /  | ESC  |
//                    | LY0 |     | SPC |   | ENT | BSPC  | LY1 |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E  &kp R  &kp T         &kp Y   &kp U     &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D  &kp F  &kp G         &kp H   &kp J     &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C  &kp V  &kp B         &kp N   &kp M     &kp COMMA &kp DOT &kp FSLH &kp ESC
                         &to 0  &trans &kp SPACE     &kp RET &kp BSPC &to 0
                        >;
                };
        };
};